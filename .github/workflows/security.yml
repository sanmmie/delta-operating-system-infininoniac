name: 🧠 DeltaOS Threat Intelligence & Security

on:
  push:
    branches: [ main, master, dev ]
  pull_request:
    branches: [ main, master, dev ]
  schedule:
    - cron: '0 2 * * *' # Daily deep scan
    - cron: '0 */6 * * *' # Threat feed sync every 6 hours

permissions:
  contents: read
  security-events: write
  issues: write

jobs:
  deltaos_security_guardian:
    name: DeltaOS Security Guardian
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: stable

      - name: Install Dependencies
        run: dart pub get

      - name: Static Analysis & Lint
        run: dart analyze --fatal-infos > lint.log || true

      - name: Dependency Vulnerability Audit
        run: dart pub audit > audit.log || true

      - name: Upload Security Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: deltaos-security-report
          path: |
            lint.log
            audit.log
          retention-days: 7

      - name: CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Fetch Threat Intelligence (NVD & Snyk)
        id: threat_intel
        run: |
          echo "🔍 Fetching CVE data..."
          mkdir -p threat_data
          curl -s "https://services.nvd.nist.gov/rest/json/cves/1.0?resultsPerPage=50" -o threat_data/nvd_latest.json
          curl -s "https://api.snyk.io/rest/orgs/public/vulnerabilities?version=2024-10-01" -o threat_data/snyk_latest.json
          echo "✅ Threat intelligence feed synced."
        continue-on-error: true

      - name: Parse and Detect Related CVEs
        id: cve_check
        run: |
          echo "🔎 Parsing NVD feed for related vulnerabilities..."
          cat threat_data/nvd_latest.json | jq '.result.CVE_Items[].cve.CVE_data_meta.ID' > threat_data/cve_ids.txt
          echo "✅ Extracted $(wc -l < threat_data/cve_ids.txt) recent CVE identifiers."
        continue-on-error: true

      - name: Create GitHub Issue for Threat Alerts
        if: always()
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "⚠️ DeltaOS Threat Intelligence Update"
          content-filepath: threat_data/cve_ids.txt
          labels: security, threat-intel, automation
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Slack (All Clear)
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "✅ *DeltaOS Security Scan & Threat Feed Passed!*",
              "attachments": [
                {
                  "color": "#36a64f",
                  "fields": [
                    { "title": "Repository", "value": "${{ github.repository }}", "short": true },
                    { "title": "Branch", "value": "${{ github.ref_name }}", "short": true },
                    { "title": "Threat Intelligence", "value": "No critical CVEs detected in the last scan." }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack (Threat Detected)
        if: failure() || contains(steps.threat_intel.outcome, 'failure')
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "🚨 *DeltaOS Threat Alert!*",
              "attachments": [
                {
                  "color": "#ff0000",
                  "fields": [
                    { "title": "Repository", "value": "${{ github.repository }}", "short": true },
                    { "title": "Branch", "value": "${{ github.ref_name }}", "short": true },
                    { "title": "Action", "value": "Threat intelligence feed detected recent vulnerabilities related to dependencies. Review issue tracker immediately." }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
